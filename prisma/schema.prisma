// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())
  polls         Poll[]
  votes         Vote[]

  @@map("users")
}

model Poll {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  is_active   Boolean  @default(true)
  user_id     String
  user        User     @relation(fields: [user_id], references: [id])
  options     Json[]   @default([
    { text: "Option A" },
    { text: "Option B" }
  ])
  votes       Vote[]

  @@map("polls")
}

model Vote {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  user_id    String
  user       User     @relation(fields: [user_id], references: [id])
  poll_id    Int
  poll       Poll     @relation(fields: [poll_id], references: [id])
  option_id  Int

  @@unique([user_id, poll_id])
  @@map("votes")
}