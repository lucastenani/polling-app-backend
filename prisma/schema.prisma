// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())
  polls         Poll[]
  votes         Vote[]

  @@map("users")
}

model Poll {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  isActive    Boolean  @default(true)
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  options     Option[]

  @@map("polls")
}

model Option {
  id     Int    @id @default(autoincrement())
  text   String
  pollId Int
  poll   Poll   @relation(fields: [pollId], references: [id])
  votes  Vote[]

  @@map("options")
}

model Vote {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  optionId   Int
  option     Option   @relation(fields: [optionId], references: [id])

  @@unique([userId, optionId])
  @@map("votes")
}
